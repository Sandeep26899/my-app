{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","value","onChange","event","target","rows","UpperCaseText","toUpperCase","LowerCaseText","toLowerCase","CaptalizeCaseText","replace","a","SentenceCaseText","charAt","slice","RemoveSpace","split","join","copyText","document","getElementById","innerHTML","navigator","clipboard","writeText","setTimeout","remove","length","defaultProps","Alert","alert","role","word","lower","capitalize","msg","App","setMode","setAlert","showAlert","message","name","body","style","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.b766cdfc.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              {/* <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link\" to=\"/about\">About</a>\r\n              </li> */}\r\n            </ul>\r\n            \r\n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                <input type=\"checkbox\" className=\"form-check-input\" id=\"customSwitch\" onClick={props.toggleMode} />\r\n                <label className=\"form-check-label\" htmlFor=\"customSwitch\">{props.mode==='light'?'Enable Dark Mode':'Disable Dark Mode'}</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Set Title Here'\r\n}","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    \r\n    const [text, setText] = useState(\"\");\r\n\r\n    const handleOnChange = (event)=> {\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleUpperCase = ()=> {\r\n        let UpperCaseText = text.toUpperCase();\r\n        setText(UpperCaseText);\r\n        // props.showAlert('UpperCase transform done', 'success');\r\n    }\r\n\r\n    const handleLowerCase = ()=> {\r\n        let LowerCaseText = text.toLowerCase();\r\n        setText(LowerCaseText);\r\n    }\r\n\r\n     const handleCaptalize = ()=> {\r\n        let CaptalizeCaseText = text.toLowerCase().replace( /\\b./g, function(a){ return a.toUpperCase(); } );\r\n        setText(CaptalizeCaseText);\r\n    }\r\n\r\n    const handleSentence = ()=> {\r\n        let SentenceCaseText = text.charAt(0).toUpperCase() + text.slice(1).toLowerCase();\r\n        setText(SentenceCaseText);\r\n    }\r\n\r\n    const handleRemoveSpaces = ()=> {\r\n        let RemoveSpace = text.split(/[ ]+/);\r\n        setText(RemoveSpace.join(\" \"));\r\n    }\r\n\r\n    const handleCopy = ()=> {\r\n    let copyText = text;\r\n        document.getElementById(\"appendText\").innerHTML = '<div id=\"copied\" class=\"alert alert-success mt-3 p-2 mb-0\" role=\"alert\">Text copied to clipboard</div>';\r\n        navigator.clipboard.writeText(copyText);\r\n        setTimeout(() => {\r\n            document.getElementById(\"copied\").remove();\r\n        }, 4000);\r\n    }\r\n\r\n    const handleRemoveNumeric = () => {\r\n        setText(text.replace(/[0-9]/g, ''));\r\n    }\r\n\r\n    const handleClear = ()=> {\r\n        setText('');\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"mb-3 mt-3\">\r\n                <h2 className={`mb-3 text-${props.mode==='light'?'dark':'light'}`}>{props.title}</h2>\r\n                <textarea className={`form-control text-${props.mode==='dark'?'light':'dark'} bg-${props.mode==='dark'?'dark':'light'}`} value={text} onChange={handleOnChange} id=\"myBox\" rows=\"8\"></textarea>\r\n                <span id=\"appendText\"></span>\r\n                <button className=\"btn btn-primary mt-3 me-2\" onClick={handleUpperCase}>UPPER CASE</button>\r\n                <button className=\"btn btn-primary mt-3 me-2\" onClick={handleLowerCase}>lower case</button>\r\n                <button className=\"btn btn-primary mt-3 me-2\" onClick={handleCaptalize}>Capitalized Case</button>\r\n                <button className=\"btn btn-primary mt-3 me-2\" onClick={handleSentence}>Sentence case</button>\r\n                <button className=\"btn btn-primary mt-3 me-2\" onClick={handleRemoveSpaces}>Remove Extra Spaces</button>\r\n                <button className=\"btn btn-primary mt-3 me-2\" onClick={handleCopy}>Copy Text</button>\r\n                <button className=\"btn btn-primary mt-3 me-2\" onClick={handleRemoveNumeric}>Remove Numeric Digits</button>\r\n                <button className=\"btn btn-danger mt-3 me-2\" onClick={handleClear}>Clear Text</button>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n                <h3 className={`text-${props.mode==='light'?'dark':'light'}`}>Your Text Summary</h3>\r\n                <p className={`text-${props.mode==='light'?'dark':'light'}`}>{text.split(\" \").length} {text.split(\" \").length === 1 && \" Word\" } {text.split(\" \").length > 1 && \" Words\" } and {text.length} {text.length < 2 && \" Character\" }  {text.length > 1 && \" Characters\" }</p>\r\n        \r\n                {text.length > 0 &&\r\n                <>\r\n                <h3 className={`text-${props.mode==='light'?'dark':'light'}`}>Preview</h3>\r\n                <p className={`text-${props.mode==='light'?'dark':'light'}`}>{text}</p>\r\n                </>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert","import './App.css';\nimport Navbar from './components/Navbar.js';\nimport TextForm from './components/TextForm.js';\nimport Alert from './components/Alert.js';\nimport React, {useState} from 'react';\n// import About from './components/About';\n\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link,\n//   useRouteMatch,\n//   useParams\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  \n  const [mode, setMode] = useState('light');\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n  setAlert({\n    msg: message,\n    type: type\n  })  \n  setTimeout(()=> { \n    setAlert(null);\n  }, 1500);  \n  }\n\n  const toggleMode = () => {\n    if(mode === 'dark'){\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light Mode Enabled', 'success');\n    }\n    else{\n      setMode('dark');\n      document.body.style.backgroundColor = '#042745';\n      showAlert('Dark Mode Enabled', 'success');\n    }\n  }\n\n    return (\n      // <Router>\n      //   <Navbar title=\"TextUtils\" name=\"Sandeep\" mode={mode} toggleMode={toggleMode}/> \n      //   <Alert alert={alert}/>\n        \n      //   <Switch>\n\n      //       <Route exact path=\"/\">\n      //       <TextForm title=\"Enter Text Below To Convert:\" mode={mode} showAlert={showAlert}/>\n      //       </Route>\n\n      //       <Route exact path=\"/about\">\n      //         <About/>\n      //       </Route>\n\n      //   </Switch>\n      // </Router>\n\n      <>\n      <Navbar title=\"TextUtils\" name=\"Sandeep\" mode={mode} toggleMode={toggleMode}/> \n      <Alert alert={alert}/>\n      <TextForm title=\"Enter Text Below To Convert:\" mode={mode} showAlert={showAlert}/>\n      </>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}